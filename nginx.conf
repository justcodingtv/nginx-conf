#user  nobody;
worker_processes  1;

error_log  logs/error.log;
error_log  logs/error.log  notice;
error_log  logs/error.log  info;

#pid        logs/nginx.pid;

events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    gzip  on;

    server {
        listen       80;
        server_name  localhost;
    }
}

rtmp {
        server {
                listen 1935;
                chunk_size 4096;

                application jctv {
			on_publish http://dev.justcodingtv.com/webhook/stream/start;
			on_publish_done http://dev.justcodingtv.com/webhook/stream/stop;
			on_update http://dev.justcodingtv.com/webhook/stream/update;
			notify_update_timeout 15s;

                        live on;
                        record off;

			#deny play all;
			allow play 127.0.0.1;

                        exec ffmpeg -re -i rtmp://localhost:1935/$app/$name -vcodec flv -framerate 30 -acodec copy -s 1280x720 -f flv rtmp://localhost:1935/dash/$name -f flv rtmp://localhost:1935/hls/$name;
               }

                application dash {
			live on;

			hls off;
			
			dash on;
			dash_path /var/www/dash;
			dash_nested on;
                }

		application hls {
			live on;

			dash off;
		
			hls on;
			hls_path /var/www/hls;
			hls_nested on;
		}

		#application preview {
		#	record keyframes;
		#	record_max_frames 4;
		#	record_path /tmp/screenshots;
		#	record_interval 30s;

		#	exec_record_done ffmpeg -i $path -vcodec png -vframes 1 -an -f rawvideo -s 320x240 -ss 00:00:01 -y /var/www/screenshots/$name.png;
		#}
        }
}
